---
import Layout from './../../layouts/Layout.astro';

// Función para obtener las películas (con o sin búsqueda)
const fetchMovies = async (query = '') => {
    let peliculas = [];
    try {
        const url = query
            ? `http://127.0.0.1:8000/api/movies/search?query=${query}` // Ruta de búsqueda
            : 'http://127.0.0.1:8000/api/movie'; // Ruta para obtener todas las películas

        const response = await fetch(url);
        if (!response.ok) {
            console.log("Hubo un error con la petición. Estado:", response.status);
        } else {
            const result = await response.json();
            peliculas = result.data || result; // Aseguramos que se obtienen los datos, ya sea en 'data' o directamente
            console.log("Películas obtenidas:", peliculas);
        }
    } catch (error) {
        console.error('Error en la solicitud fetch:', error);
    }
    return peliculas;
};

// Cargar todas las películas inicialmente
let peliculas = await fetchMovies(); // Se cargan todas las películas por defecto
---

<Layout title="Películas">
    <main class="w-full flex flex-col gap-7 overflow-auto-y pl-7 pr-14 py-2">
       <div class="w-full flex justify-between">
            <!-- Campo de búsqueda -->
            <input
                type="text"
                placeholder="Buscar películas"
                class="bg-transparent outline-none border-b text-white px-2 border-b-zinc-400"
                id="searchInput"
            />
            <select name="" id="" class="bg-[#020617] outline-none text-zinc-400 px-2">
                <option value="">Todas las películas</option>
                <option value="">Más populares</option>
                <option value="">Recientes</option>
            </select>
       </div>

       <!-- Lista de películas -->
       <div id="movieList" class="flex flex-wrap gap-4">
           {peliculas.length > 0 ? (
                peliculas.map((pelicula) => (
                <a href={`peliculas/Details/${pelicula.id}`} class="relative bg-zinc-800 text-white rounded-lg w-60">
                    <div class="p-2 absolute bg-gradient-to-b from-black/60 w-full">
                        <h3 class="text-lg font-medium">{pelicula.name}</h3>
                        <p class="text-sm text-zinc-500">{pelicula.releaseDate}</p>
                    </div>
                    <div>
                        <img src={pelicula.image} alt="Imagen de la película" class="w-30" />
                    </div>
                </a>
                ))
           ) : (
                <p class="text-white">No se encontraron películas</p>
           )}
       </div>
    </main>

    <!-- Script para manejar la búsqueda -->
    <script>
        const searchInput = document.getElementById('searchInput');
        
        // Función para actualizar la lista de películas
        const updateMoviesList = async (query = '') => {
            console.log("Realizando búsqueda con query:", query);

            // Petición para obtener las películas con o sin búsqueda
            const response = await fetch(query ? `http://127.0.0.1:8000/api/movies/search?query=${query}` : `http://127.0.0.1:8000/api/movie`);
            
            if (!response.ok) {
                console.error("Error en la búsqueda, estado:", response.status);
                return;
            }

            const result = await response.json();
            const peliculas = result.data || result; // Asegurar que el resultado viene en 'data' o directamente
            console.log("Películas obtenidas en búsqueda:", peliculas);

            // Actualizamos la lista de películas
            const movieList = document.getElementById('movieList');
            if (peliculas.length > 0) {
                movieList.innerHTML = peliculas.map(pelicula => `
                    <a href="peliculas/Details/${pelicula.id}" class="relative bg-zinc-800 text-white rounded-lg w-60">
                        <div class="p-2 absolute bg-gradient-to-b from-black/60 w-full">
                            <h3 class="text-lg font-medium">${pelicula.name}</h3>
                            <p class="text-sm text-zinc-500">${pelicula.releaseDate}</p>
                        </div>
                        <div>
                            <img src="${pelicula.image}" alt="Imagen de ${pelicula.name}" class="w-30" />
                        </div>
                    </a>
                `).join('');
            } else {
                movieList.innerHTML = '<p class="text-white">No se encontraron películas</p>';
            }
        };

        // Evento para manejar la búsqueda
        searchInput.addEventListener('input', (event) => {
            const query = event.target.value.trim();
            updateMoviesList(query); // Realizamos la búsqueda cada vez que el usuario escribe
        });

        // Mostrar todas las películas al cargar la página
        updateMoviesList(); // Carga inicial para mostrar todas las películas
    </script>
</Layout>
