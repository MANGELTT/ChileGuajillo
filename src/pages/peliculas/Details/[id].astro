---
import Layout from "../../../layouts/Layout.astro";
import CommentsSection from "../../../components/CommentsSection.jsx";
import { UserProvider } from "../../../components/context/UserContext.jsx"; // Asegúrate de que el path sea correcto

const { id } = Astro.params;

const fetchMovieDetails = async (id) => {
    let movieDetails = null;
    try {
        const response = await fetch(`http://127.0.0.1:8000/api/movie/${id}`);
        if (response.ok) {
            const result = await response.json();
            movieDetails = result.data;
        }
    } catch (error) {
        console.error('Error en la solicitud fetch:', error);
    }
    return movieDetails;
};

const fetchMovieComments = async (id) => {
    let comments = [];
    try {
        const response = await fetch(`http://127.0.0.1:8000/api/movie/${id}/reviews`);
        if (response.ok) {
            const result = await response.json();
            comments = result.data || []; // Asegúrate de que sea un arreglo
        }
    } catch (error) {
        console.error('Error en la solicitud fetch:', error);
    }
    return comments;
};

const calculateAverageRating = (comments) => {
    if (comments.length === 0) return 0;
    const totalRating = comments.reduce((sum, comment) => sum + comment.rating, 0);
    return (totalRating / comments.length).toFixed(1);
};

const movieDetails = await fetchMovieDetails(id);
const movieComments = await fetchMovieComments(id) || [];
const averageRating = calculateAverageRating(movieComments);
---
<Layout title="Detalles">
    <div class="max-w-7xl mx-auto pt-8 space-y-12">
      <div class="flex flex-col lg:flex-row gap-12">
        {movieDetails ? (
          <div class="flex-1 p-8 bg-gray-900 rounded-lg shadow-lg max-w-4xl mx-auto">
            <h1 class="text-4xl font-bold text-white mb-6">{movieDetails.name}</h1>
            <div class="flex flex-col lg:flex-row items-start gap-6">
              <img src={movieDetails.image} alt={`Imagen de ${movieDetails.name}`} class="w-full lg:w-1/3 h-auto rounded-lg shadow-lg" />
              <div class="flex-1">
                <div class="max-h-48 overflow-y-auto">
                  <p class="text-lg text-gray-300 mb-6">{movieDetails.synopsis}</p>
                </div>
                <p class="text-sm text-gray-500 mb-6">{new Date(movieDetails.releaseDate).toLocaleDateString()}</p>
                <a href={movieDetails.urlTrailer} class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition duration-300" target="_blank" rel="noopener noreferrer">
                    Ver trailer
                </a>
                <div class="bg-yellow-500 text-white text-2xl font-bold flex items-center justify-center mt-4 p-2 rounded-lg shadow-lg">
                  <i class="fas fa-star mr-2"></i>
                  Promedio: {averageRating}/5
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div class="flex-1 p-8 bg-red-900 rounded-lg shadow-lg max-w-4xl mx-auto">
            <p class="text-white">Error en la carga de la película.</p>
          </div>
        )}
      </div>
      <UserProvider>
        <CommentsSection movieId={id} initialComments={movieComments} client:load />
      </UserProvider>
    </div>
</Layout>