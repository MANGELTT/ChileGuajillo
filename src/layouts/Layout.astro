---
interface Props {
	title: string;
}
import { UserProvider } from '../components/context/UserContext.jsx';
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
</head>
<body class="h-screen w-screen relative overflow-x-hidden bg-slate-50 dark:bg-[#131313]">
    <UserProvider>
    <div class="relative h-full w-full bg-slate-950">
        <div class="absolute bottom-0 left-0 right-0 top-0 bg-[radial-gradient(circle_500px_at_50%_200px,#3e3e3e,transparent)]">
            <header class="items-center gap-10 absolute w-full flex xs:py-3 sm:p-0 xs:px-5 md:px-10  justify-between ">
                <a href="/" class="text-2xl text-white font-medium">Chile<span class="text-red-600  font-bold">Guajillo</span></a>
                <nav class="gap-3">
                    <!-- Menú para usuarios no autenticados -->
                    <div id="navGuest" class="flex gap-3">
                        <a href="/auth/Login" class="text-zinc-300 p-2 font-medium hover:text-white">Iniciar sesión</a>
                        <span class="text-zinc-400">/</span>
                        <a href="/auth/Register" class="font-medium p-2 text-zinc-300 hover:text-white">Registrarse</a>
                    </div>

                    <!-- Menú para usuarios autenticados -->
                    <div id="navAuth" class="flex gap-3 hidde">
                        <!-- <div class="flex gap-2">
                            <a href="#" class="hover:text-indigo-200 font-medium transition-all delay-0 hover:bg-indigo-950/20 p-2 rounded">Perfil</a>
                        </div> -->
                        <!-- <span>/</span> -->
                        <div class="flex items-center gap-2 hover:bg-indigo-950/20 rounded-full pr-3 transition-all delay-0 ease-linear">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/1/18/Mark_Zuckerberg_F8_2019_Keynote_%2832830578717%29_%28cropped%29.jpg"
                                class="w-12 h-12 rounded-full" alt="Imagen de perfil">
                            <a class="text-nowrap" id="cardUserName"></a>
                        </div>
                    </div>
                </nav>
                <button class="xs:flex md:hidden">
                    <svg width="30" height="30" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><line x1="5" y1="7" x2="19" y2="7" stroke="rgba(250,250,255)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></line><line x1="5" y1="12" x2="19" y2="12" stroke="rgba(250,250,255" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></line><line x1="5" y1="17" x2="19" y2="17" stroke="rgba(250,250,255)" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></line></svg>
                </button>
            </header>
            <div class="flex h-full w-full xs:pt-20 md:pt-24 gap-4">
                <aside class="flex flex-col h-full justify-between pb-2 bg-gray-800 shadow-lg">
                    <div class="flex md:flex-col justify-between h-screen text-zinc-300">
                        <div class="flex flex-col gap-4">
                            <span class="pl-8 text-sm text-zinc-500 pr-16">Menú de navegación</span>
                            <nav class="flex flex-col gap-2 font-medium">
                                <a href="/" class="flex items-center pl-8 py-2 border-l-4 border-l-red-500 text-red-500 bg-red-950/20 hover:bg-red-950/30 transition">
                                    <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M13 5v6h6m-6 0L12 3" />
                                    </svg>
                                    Inicio
                                </a>
                                <a href="/peliculas" class="flex items-center pl-8 py-2 pr-16 hover:bg-gray-700 transition rounded">
                                    <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6h6v13m2 0a2 2 0 100-4 2 2 0 000 4z" />
                                    </svg>
                                    Películas
                                </a>

                                <!-- Opciones especiales para usuarios autenticados con permisos específicos -->
                                <a href="/directores/CreateDirector" class="flex items-center p-2 text-zinc-300 hover:text-white hover:bg-gray-700 transition hidden admin-link rounded">
                                    <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                                    </svg>
                                    Crear Director
                                </a>
                                <a href="/clasificacion/clasificaciones" class="flex items-center p-2 text-zinc-300 hover:text-white hover:bg-gray-700 transition hidden admin-link rounded">
                                    <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                    </svg>
                                    Crear Clasificación
                                </a>
                                <a href="/peliculas/CreateMovie" class="flex items-center p-2 text-zinc-300 hover:text-white hover:bg-gray-700 transition hidden admin-link rounded">
                                    <svg class="h-5 w-5 mr-3" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                                    </svg>
                                    Crear Película
                                </a>
                            </nav>
                        </div>
                        <div class="px-8">
                            <button id="btnLogOut" class="flex items-center py-2 px-4 bg-red-600 text-white rounded hover:bg-red-700 transition">
                                <svg class="h-5 w-5 mr-2" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7" />
                                </svg>
                                Cerrar Sesión
                            </button>
                        </div>
                    </div>
                </aside>
                <slot />
            </div>
        </div>
    </div>
    <script src="./../utils/Auth.js"></script>
    <script src="../pages/Carrusel/Carrusel.js"></script>
    </UserProvider>
</body>
</html>

<style is:global>
    :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
            45deg,
            rgb(var(--accent)),
            rgb(var(--accent-light)) 30%,
            white 60%
        );
    }
    code {
        font-family:
            Menlo,
            Monaco,
            Lucida Console,
            Liberation Mono,
            DejaVu Sans Mono,
            Bitstream Vera Sans Mono,
            Courier New,
            monospace;
    }
    .hidde {
        display: none;
    }
</style>

<script>
async function loadUser() {
    try {
        const token = JSON.parse(localStorage.getItem('tokerUser_Verified'));
        console.log("Token:", token);
        console.log('Fetching userID...');
        
        const response = await fetch('http://127.0.0.1:8000/api/user-profile', {
            method: 'GET',
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`
            }
        });
        
        if (!response.ok) {
            throw new Error('Error al obtener el UserID: ' + response.statusText);
        }
        
        const userProfile = await response.json();
        const userID = userProfile.userData.profile.user_id;
        const profileID = userProfile.userData.profile.id;
        const typeProfile = userProfile.userData.profile.typeProfile; // Obtener el typeProfile
        
        console.log('User ID:', userID);
        console.log('Profile ID:', profileID);
        console.log('Type Profile:', typeProfile);
        
        localStorage.setItem('userID', userID);
        localStorage.setItem('profileID', profileID);
        localStorage.setItem('typeProfile', typeProfile);

        // Ocultar el menú de invitados y mostrar el menú autenticado
        document.getElementById('navGuest').classList.add('hidde');
        document.getElementById('navAuth').classList.remove('hidde');

        // Mostrar opciones según el tipo de usuario
        if (typeProfile === 2) { // Verificar si es administrador
            document.querySelector('a[href="/directores/CreateDirector"]').classList.remove('hidde');
            document.querySelector('a[href="/clasificacion/clasificaciones"]').classList.remove('hidde');
            document.querySelector('a[href="/peliculas/CreateMovie"]').classList.remove('hidde');
        }

    } catch (error) {
        console.error(error);
        alert('Hubo un problema al obtener el perfil de usuario. Por favor, intenta de nuevo más tarde.');
    }
}

document.addEventListener('DOMContentLoaded', loadUser);

function checkAdminAccess() {
    const typeProfile = localStorage.getItem('typeProfile');
    const adminLinks = document.querySelectorAll('.admin-link');
    
    console.log('Type Profile:', typeProfile); // Debug
    
    if (typeProfile === '2') { // Note: localStorage stores strings
      adminLinks.forEach(link => {
        link.classList.remove('hidden');
      });
    }
  }

  // Run on page load
  document.addEventListener('DOMContentLoaded', checkAdminAccess);

  // Also check when localStorage changes
  window.addEventListener('storage', checkAdminAccess);
</script>

<style>
  .hidden {
    display: none;
  }
</style>